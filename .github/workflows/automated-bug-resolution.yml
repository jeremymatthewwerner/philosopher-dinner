name: 🤖 Automated Bug Resolution

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test-and-track:
    runs-on: ubuntu-latest
    outputs:
      tests_failed: ${{ steps.test-results.outputs.failed }}
      issue_created: ${{ steps.test-results.outputs.issue_created }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Enhanced Test Suite with Issue Tracking
      id: test-results
      run: |
        # Run tests and capture exit code
        python enhanced_test_runner.py || TEST_FAILED=$?
        
        # Set outputs for next job
        if [ "$TEST_FAILED" != "" ]; then
          echo "failed=true" >> $GITHUB_OUTPUT
          echo "🔴 Tests failed - bug tracking activated"
        else
          echo "failed=false" >> $GITHUB_OUTPUT
          echo "✅ All tests passed"
        fi
        
        # Check if any issues were created
        if grep -q "Filed GitHub issue" enhanced_test_runner.log 2>/dev/null; then
          echo "issue_created=true" >> $GITHUB_OUTPUT
        else
          echo "issue_created=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          *.log
          bug_tracking.json
          agent_actions.json

  auto-fix-bugs:
    needs: test-and-track
    runs-on: ubuntu-latest
    if: needs.test-and-track.outputs.tests_failed == 'true'
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Full history for better git operations
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Actions Bug Fixer"
    
    - name: Download test results
      uses: actions/download-artifact@v3
      with:
        name: test-results
    
    - name: Run Issue Monitoring Agent
      id: bug-fix
      run: |
        echo "🔧 Running automated bug fix agent..."
        
        # Run the agent and capture results
        python issue_monitoring_agent.py --once > agent_output.log 2>&1
        
        # Check if any fixes were applied
        if grep -q "Successfully fixed" agent_output.log; then
          echo "fixes_applied=true" >> $GITHUB_OUTPUT
          echo "✅ Automated fixes were applied"
        else
          echo "fixes_applied=false" >> $GITHUB_OUTPUT
          echo "❌ No automated fixes could be applied"
        fi
        
        cat agent_output.log
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Run tests to verify fixes
      if: steps.bug-fix.outputs.fixes_applied == 'true'
      run: |
        echo "🧪 Verifying fixes with tests..."
        python enhanced_test_runner.py
    
    - name: Commit fixes
      if: steps.bug-fix.outputs.fixes_applied == 'true'
      run: |
        # Check for changes
        if ! git diff --quiet; then
          git add -A
          git commit -m "🤖 Automated bug fix applied by GitHub Actions

This commit contains automated fixes for failing tests.
The Issue Monitoring Agent detected and fixed the issues.

Triggered by: ${{ github.event_name }} on ${{ github.ref }}
Workflow: ${{ github.workflow }} #${{ github.run_number }}

🤖 Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
          
          # Push the fixes
          git push
          echo "✅ Fixes committed and pushed"
        else
          echo "ℹ️ No changes to commit"
        fi

  notify-status:
    needs: [test-and-track, auto-fix-bugs]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Create status comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const testsFailed = '${{ needs.test-and-track.outputs.tests_failed }}' === 'true';
          const issueCreated = '${{ needs.test-and-track.outputs.issue_created }}' === 'true';
          const fixesApplied = '${{ needs.auto-fix-bugs.outputs.fixes_applied }}' === 'true';
          
          let comment = '## 🤖 Automated Bug Resolution Report\n\n';
          
          if (!testsFailed) {
            comment += '✅ **All tests passed!** No issues detected.\n';
          } else {
            comment += '🔴 **Tests failed!** Automated resolution attempted.\n\n';
            
            if (issueCreated) {
              comment += '📋 **GitHub issue created** for tracking\n';
            }
            
            if (fixesApplied) {
              comment += '✅ **Automated fixes applied successfully**\n';
              comment += '🔄 Tests re-run to verify fixes\n';
            } else {
              comment += '❌ **No automated fixes available** - manual intervention required\n';
            }
          }
          
          comment += '\n---\n*Generated by Automated Bug Resolution workflow*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });